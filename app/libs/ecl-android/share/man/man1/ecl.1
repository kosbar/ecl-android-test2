.TH ecl 1 2021-02-01

.SH NAME
ecl -- Embeddable Common Lisp

.SH SYNOPSIS

\fBecl\fP
[\fB-?\fP | \fB--help\fP]  [\fB-v\fP | \fB--version\fP] [\fB--debug\fP | \fB--nodebug\fP]
.br
[\fB--dir\fP \fIdir\fP] [\fB--load\fP \fIfile\fP] [\fB--shell\fP \fIfile\fP] [\fB--eval\fP \fIexpr\fP] [\fB--rc\fP | \fB--norc\fP]
.br
[\fB--c-stack\fP \fIsize\fP] [\fB--lisp-stack\fP \fIsize\fP] [\fB--heap-size\fP \fIsize\fP]
.br
[\fB--frame-stack\fP \fIsize\fP]
.br
[[\fB-o\fP \fIofile\fP] [\fB-c\fP [\fIcfile\fP]] [\fB-h\fP [\fIhfile\fP]] [\fB--data\fP [\fIdatafile\fP]] [\fB-s\fP] [\fB-q\fP]
.br
 \fB--compile\fP \fIfile\fP]
.br
[[\fB-o\fP \fIofile\fP] \fB--link\fP \fIfile+\fP]
.br
[\fB--input-encoding\fP \fIexternal-format\fP] [\fB--output-encoding\fP \fIexternal-format\fP]
.br
[\fB--error-encoding\fP \fIexternal-format\fP] [\fB--encoding\fP \fIexternal-format\fP]
.br
[\fB--trap-fpe\fP | \fB--no-trap-fpe\fP]
.br

\" \fBDEPRECATION NOTE:\fP one-dash versions of long flags(e.g. \fB-eval\fP or \fB-data\fP) are deprecated; you should use two-dash versions (e.g. \fB--eval\fP or \fB--data\fP) now.

.SH DESCRIPTION

ECL (Embeddable Common-Lisp) is an interpreter of the Common-Lisp language as described in the
X3J13 ANSI specification, featuring CLOS (Common-Lisp Object System), conditions, loops,
etc. plus a translator to C, which can produce standalone executables.

ECL supports the operating systems Linux, FreeBSD, NetBSD, OpenBSD, OS\~X, Solaris and Windows,
running on top of the Intel, Sparc, Alpha, PowerPC and ARM processors.

.PP
The current ECL implementation features:
.IP \(bu
A bytecode compiler and interpreter.
.IP \(bu
Compiles Lisp also with any C/C++ compiler
.IP \(bu
Can build standalone executables and libraries
.IP \(bu
ASDF, Sockets, Gray streams, MOP, and other useful components
.IP \(bu
Extremely portable
.IP \(bu
A reasonable license
.PP
\fBecl\fP without any argument starts the interactive lisp session.

.SH OPTIONS
.TP 3
.B \-?, \-\-help
Shows the help prompt without running the ECL.
.TP 3
.B \-v, \-\-version,
Prints the current version of ECL, without running the ECL.
.TP 3
.B \-\-debug
Turned on by default, this enables the debugging in the setup phase,
so that you can debug your files.
.TP 3
.B \-\-nodebug
Run without debugging setup phase, meaning that errors prevent ECL from starting up.
.TP 3
.B \-\-dir\~\fIdirectory\fP
Use \fIdirectory\fP as a system directory.
.TP 3
.B \-\-load\~\fIfile\fP
Load source \fIfile\fP before loading the \fB.rc\fP file and starting the toplevel.
.TP 3
.B \-\-shell\~\fIfile\fP
Executes the given \fIfile\fP and exits, without providing a read-eval-print loop.
If you want to use lisp as a scripting language, you can write
.BR "#!${exec_prefix}/bin/ecl --shell"
on the first line of the file to be executed, and then ECL will be
automatically invoked.
.TP 3
.B \-\-eval\~\fIfile\fP
Evaluate the \fIfile\fP before loading the \fB.rc\fP file and starting the Top Level.
.TP 3
.B \-\-rc
Load configuration files at startup (default).
.TP 3
.B \-\-norc
Do not load configuration files at startup.
.TP 3
.B \-\-c\-stack\~\fIsize\fP
Set C stack \fIsize\fP in kilobytes for C compiler.
.TP 3
.B \-\-lisp\-stack\~\fIsize\fP
Set stack \fIsize\fP in kilobytes for bytecodes interpreter.
.TP 3
.B \-\-heap\-stack\~\fIsize\fP
Set heap \fIsize\fP in kilobytes.
.TP 3
.B \-\-frame\-stack\~\fIsize\fP
Set frame \fIsize\fP in kilobytes for runtime control structures.
.TP 3
.B \-o\~\fIfile\fP
Provide the output target \fIfile\fP for compilation.
.TP 3
.B \-c\~\fIcfile\fP
When compiling name the intermediary \fI*.c\fP file \fIcfile\fP and do not delete it afterwards.
.TP 3
.B \-h\~\fIhfile\fP
When compiling name the intermediary \fI*.h\fP file \fIhfile\fP and do not delete it afterwards.
.TP 3
.B \-\-data\~[\fIdatafile\fP]
Dumps compiler data into \fIdatafile\fP or, if not
supplied, into a file named after the source file, but
with \fI.data\fP as extension.
.TP 3
.B \-s
Produce a linkable object file. It cannot be loaded
with \fB(load)\fP, but it can be used to build libraries
or standalone executable programs.
.TP 3
.B \-q
Short for quiet -- produce less notes.
.TP 3
.B \-\-compile\~\fIfile\fP
Translates \fIfile\fP to C and invokes the local C compiler to produce
a native code program.
.TP 3
.B \-\-link\~\fIfile+\fP
Create standalone executable from Lisp files \fIfile+\fP.
.TP 3
.B \-\-input-encoding\~\fIencoding\fP
Specify the external \~\fIencoding\fP for standard input.
.TP 3
.B \-\-output-encoding\~\fIencoding\fP
Specify the external \~\fIencoding\fP for standard output.
.TP 3
.B \-\-error-encoding\~\fIencoding\fP
Specify the external \~\fIencoding\fP for standard error.
.TP 3
.B \-\-encoding\~\fIencoding\fP
Specify the external \~\fIencoding\fP for standard input, output, trace and error.
.TP 3
.B \-\-trap-fpe
Make ECL debugger catch floating point exception.
.TP 3
.B \-\-no-trap-fpe
Disable ECL debugger floating point exception catching.

.SH AUTHORS

The original version was developed by Giuseppe Attardi starting from
the Kyoto Common Lisp implementation by Taiichi Yuasa, Masami
Hagiya. Further development was lead by Juan Jose Garcia Ripoll.  The
current maintainers of ECL are Daniel Kochma≈Ñski and Marius Gerbershagen,
who can be reached at the ECL mailing list.

.SH FILES

.TP
.I ~/.ecl, ~/.eclrc
Default initialization files loaded at startup unless the option \fB\-\-norc\fP
is provided (if they exist).

.SH SEE ALSO
.IP
ANSI Common Lisp standard X3.226-1994
.IP
The Common Lisp HyperSpec

.SH BUGS
Unfortunately it is possible that there are some bugs in the program.
In case you find any bug, please report it as an issue (after making sure that it hasn't been reported or fixed)
to official gitlab repository:
.UR https://gitlab.com/embeddable-common-lisp/ecl/issues
.UE
.

.SH LICENSE

This library is free software; you can redistribute it and/or modify it under
the terms of the GNU Lesser General Public License as published by the Free
Software Foundation; either version 2.1 of the License, or (at your option) any
later version.

This library is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with this library; if not, write to the Free Software Foundation, Inc., 51
Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

Please report bugs, comments, suggestions to the ecl mailing list:
.MT ecl-devel@common-lisp.net
.ME
(or use gitlab).
